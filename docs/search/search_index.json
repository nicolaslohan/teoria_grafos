{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"bibgrafo Uma biblioteca para ensino de Teoria dos Grafos Compat\u00edvel apenas com python 3.x Para instalar basta digitar: pip install bibgrafo","title":"Home"},{"location":"#bibgrafo","text":"Uma biblioteca para ensino de Teoria dos Grafos Compat\u00edvel apenas com python 3.x Para instalar basta digitar: pip install bibgrafo","title":"bibgrafo"},{"location":"modules/bibgrafo/aresta/","text":"Aresta source Aresta( rotulo: str, v1: Vertice, v2: Vertice, peso: int = 1 ) Esta classe representa uma aresta de um Grafo. Attributes _rotulo (str) : O r\u00f3tulo (ou nome) da aresta _v1 (Vertice) : O primeiro v\u00e9rtice da aresta _v2 (Vertice) : O segundo v\u00e9rtice da aresta _peso (int) : O peso da aresta Methods: .rotulo source .rotulo() str: O r\u00f3tulo (ou nome) da aresta. .v1 source .v1() Vertice: O primeiro v\u00e9rtice da aresta. .v2 source .v2() Vertice: O segundo v\u00e9rtice da aresta. .peso source .peso() int: O peso da aresta. .eh_ponta source .eh_ponta( v ) Verifica se um v\u00e9rtice passado como par\u00e2metro \u00e9 uma das pontas da aresta. Args v : O v\u00e9rtice que se deseja verificar se \u00e9 ponta da aresta. Returns True se for ponta da aresta ou False, caso contr\u00e1rio. ArestaDirecionada source ArestaDirecionada()","title":"aresta"},{"location":"modules/bibgrafo/aresta/#_1","text":"","title":""},{"location":"modules/bibgrafo/aresta/#aresta","text":"source Aresta( rotulo: str, v1: Vertice, v2: Vertice, peso: int = 1 ) Esta classe representa uma aresta de um Grafo. Attributes _rotulo (str) : O r\u00f3tulo (ou nome) da aresta _v1 (Vertice) : O primeiro v\u00e9rtice da aresta _v2 (Vertice) : O segundo v\u00e9rtice da aresta _peso (int) : O peso da aresta Methods:","title":"Aresta"},{"location":"modules/bibgrafo/aresta/#rotulo","text":"source .rotulo() str: O r\u00f3tulo (ou nome) da aresta.","title":".rotulo"},{"location":"modules/bibgrafo/aresta/#v1","text":"source .v1() Vertice: O primeiro v\u00e9rtice da aresta.","title":".v1"},{"location":"modules/bibgrafo/aresta/#v2","text":"source .v2() Vertice: O segundo v\u00e9rtice da aresta.","title":".v2"},{"location":"modules/bibgrafo/aresta/#peso","text":"source .peso() int: O peso da aresta.","title":".peso"},{"location":"modules/bibgrafo/aresta/#eh_ponta","text":"source .eh_ponta( v ) Verifica se um v\u00e9rtice passado como par\u00e2metro \u00e9 uma das pontas da aresta. Args v : O v\u00e9rtice que se deseja verificar se \u00e9 ponta da aresta. Returns True se for ponta da aresta ou False, caso contr\u00e1rio.","title":".eh_ponta"},{"location":"modules/bibgrafo/aresta/#arestadirecionada","text":"source ArestaDirecionada()","title":"ArestaDirecionada"},{"location":"modules/bibgrafo/grafo/","text":"GrafoIF source GrafoIF() Esta classe define uma interface que todos as classes que implementam um grafo devem ter. Esta classe n\u00e3o \u00e9 concreta. N\u00e3o deve ser instanciada. Methods: .vertice_valido source .vertice_valido( cls, vertice: Vertice ) Verifica se um v\u00e9rtice passado como par\u00e2metro est\u00e1 dentro do padr\u00e3o estabelecido. O r\u00f3tulo do v\u00e9rtice n\u00e3o pode ser vazio. Args vertice : Um objeto do tipo Vertice que representa o v\u00e9rtice a ser analisado. Returns Um valor booleano que indica se o v\u00e9rtice est\u00e1 no formato correto. .existe_vertice source .existe_vertice( vertice: Vertice ) Verifica se um v\u00e9rtice passado como par\u00e2metro pertence ao grafo. Args vertice : O v\u00e9rtice que deve ser verificado. Return: Um valor booleano que indica se o v\u00e9rtice existe no grafo. .existe_rotulo_vertice source .existe_rotulo_vertice( rotulo: str ) Verifica se h\u00e1 algum v\u00e9rtice no grafo com o r\u00f3tulo que \u00e9 passado como par\u00e2metro. Args rotulo : O v\u00e9rtice que deve ser verificado. Returns Um valor booleano que indica se o v\u00e9rtice existe no grafo. .get_vertice source .get_vertice( rotulo: str ) Retorna o objeto do tipo v\u00e9rtice que tem como r\u00f3tulo o par\u00e2metro passado. Args rotulo : O r\u00f3tulo do v\u00e9rtice a ser retornado Returns Um objeto do tipo v\u00e9rtice que tem como r\u00f3tulo o par\u00e2metro passado Raises VerticeInvalidoError se o v\u00e9rtice n\u00e3o for encontrado. .remove_vertice source .remove_vertice( v: str ) Remove um v\u00e9rtice que tenha o r\u00f3tulo passado como par\u00e2metro e remove em cascata as arestas que est\u00e3o conectadas a esse v\u00e9rtice. Args v : O r\u00f3tulo do v\u00e9rtice a ser removido. Raises VerticeInvalidoError se o v\u00e9rtice passado como par\u00e2metro n\u00e3o existir no grafo. .existe_rotulo_aresta source .existe_rotulo_aresta( r: str ) Verifica se um r\u00f3tulo de aresta passada como par\u00e2metro pertence ao grafo. Args r : O r\u00f3tulo da aresta a ser verificada Returns Um valor booleano que indica se o r\u00f3tulo da aresta existe no grafo. .get_aresta source .get_aresta( r ) Retorna uma refer\u00eancia para a aresta que tem o r\u00f3tulo passado como par\u00e2metro Args r : O r\u00f3tulo da aresta solicitada Returns Um objeto do tipo Aresta que \u00e9 uma refer\u00eancia para a aresta requisitada ou False se a aresta n\u00e3o existe .aresta_valida source .aresta_valida( aresta: Aresta ) Verifica se uma aresta passada como par\u00e2metro est\u00e1 dentro do padr\u00e3o estabelecido. Uma aresta s\u00f3 \u00e9 v\u00e1lida se conectar dois v\u00e9rtices existentes no grafo e for uma inst\u00e2ncia da classe Aresta. Args aresta : A aresta que se quer verificar se est\u00e1 no formato correto. Returns Um valor booleano que indica se a aresta est\u00e1 no formato correto. .remove_aresta source .remove_aresta( r: str ) Remove uma aresta a partir de seu r\u00f3tulo. Args r : O r\u00f3tulo da aresta a ser removida. Raises ArestaInvalidaError se a aresta passada como par\u00e2metro n\u00e3o puder ser removida.","title":"grafo"},{"location":"modules/bibgrafo/grafo/#_1","text":"","title":""},{"location":"modules/bibgrafo/grafo/#grafoif","text":"source GrafoIF() Esta classe define uma interface que todos as classes que implementam um grafo devem ter. Esta classe n\u00e3o \u00e9 concreta. N\u00e3o deve ser instanciada. Methods:","title":"GrafoIF"},{"location":"modules/bibgrafo/grafo/#vertice_valido","text":"source .vertice_valido( cls, vertice: Vertice ) Verifica se um v\u00e9rtice passado como par\u00e2metro est\u00e1 dentro do padr\u00e3o estabelecido. O r\u00f3tulo do v\u00e9rtice n\u00e3o pode ser vazio. Args vertice : Um objeto do tipo Vertice que representa o v\u00e9rtice a ser analisado. Returns Um valor booleano que indica se o v\u00e9rtice est\u00e1 no formato correto.","title":".vertice_valido"},{"location":"modules/bibgrafo/grafo/#existe_vertice","text":"source .existe_vertice( vertice: Vertice ) Verifica se um v\u00e9rtice passado como par\u00e2metro pertence ao grafo. Args vertice : O v\u00e9rtice que deve ser verificado. Return: Um valor booleano que indica se o v\u00e9rtice existe no grafo.","title":".existe_vertice"},{"location":"modules/bibgrafo/grafo/#existe_rotulo_vertice","text":"source .existe_rotulo_vertice( rotulo: str ) Verifica se h\u00e1 algum v\u00e9rtice no grafo com o r\u00f3tulo que \u00e9 passado como par\u00e2metro. Args rotulo : O v\u00e9rtice que deve ser verificado. Returns Um valor booleano que indica se o v\u00e9rtice existe no grafo.","title":".existe_rotulo_vertice"},{"location":"modules/bibgrafo/grafo/#get_vertice","text":"source .get_vertice( rotulo: str ) Retorna o objeto do tipo v\u00e9rtice que tem como r\u00f3tulo o par\u00e2metro passado. Args rotulo : O r\u00f3tulo do v\u00e9rtice a ser retornado Returns Um objeto do tipo v\u00e9rtice que tem como r\u00f3tulo o par\u00e2metro passado Raises VerticeInvalidoError se o v\u00e9rtice n\u00e3o for encontrado.","title":".get_vertice"},{"location":"modules/bibgrafo/grafo/#remove_vertice","text":"source .remove_vertice( v: str ) Remove um v\u00e9rtice que tenha o r\u00f3tulo passado como par\u00e2metro e remove em cascata as arestas que est\u00e3o conectadas a esse v\u00e9rtice. Args v : O r\u00f3tulo do v\u00e9rtice a ser removido. Raises VerticeInvalidoError se o v\u00e9rtice passado como par\u00e2metro n\u00e3o existir no grafo.","title":".remove_vertice"},{"location":"modules/bibgrafo/grafo/#existe_rotulo_aresta","text":"source .existe_rotulo_aresta( r: str ) Verifica se um r\u00f3tulo de aresta passada como par\u00e2metro pertence ao grafo. Args r : O r\u00f3tulo da aresta a ser verificada Returns Um valor booleano que indica se o r\u00f3tulo da aresta existe no grafo.","title":".existe_rotulo_aresta"},{"location":"modules/bibgrafo/grafo/#get_aresta","text":"source .get_aresta( r ) Retorna uma refer\u00eancia para a aresta que tem o r\u00f3tulo passado como par\u00e2metro Args r : O r\u00f3tulo da aresta solicitada Returns Um objeto do tipo Aresta que \u00e9 uma refer\u00eancia para a aresta requisitada ou False se a aresta n\u00e3o existe","title":".get_aresta"},{"location":"modules/bibgrafo/grafo/#aresta_valida","text":"source .aresta_valida( aresta: Aresta ) Verifica se uma aresta passada como par\u00e2metro est\u00e1 dentro do padr\u00e3o estabelecido. Uma aresta s\u00f3 \u00e9 v\u00e1lida se conectar dois v\u00e9rtices existentes no grafo e for uma inst\u00e2ncia da classe Aresta. Args aresta : A aresta que se quer verificar se est\u00e1 no formato correto. Returns Um valor booleano que indica se a aresta est\u00e1 no formato correto.","title":".aresta_valida"},{"location":"modules/bibgrafo/grafo/#remove_aresta","text":"source .remove_aresta( r: str ) Remove uma aresta a partir de seu r\u00f3tulo. Args r : O r\u00f3tulo da aresta a ser removida. Raises ArestaInvalidaError se a aresta passada como par\u00e2metro n\u00e3o puder ser removida.","title":".remove_aresta"},{"location":"modules/bibgrafo/grafo_errors/","text":"VerticeInvalidoError source VerticeInvalidoError() Esta classe deve ser usada quando o v\u00e9rtice n\u00e3o existe no grafo ou quando o formato do v\u00e9rtice for inv\u00e1lido. ArestaInvalidaError source ArestaInvalidaError() Esta classe deve ser usada quando a aresta n\u00e3o existe no grafo ou quando o formato da aresta for inv\u00e1lida. MatrizInvalidaError source MatrizInvalidaError() Esta classe deve ser usada quando a matriz de adjac\u00eancia n\u00e3o estiver no formato correto. Pode ser usada nas classes GrafoMatrizAdjacenciaDirecionado e GrafoMatrizAdjacenciaNaoDirecionado.","title":"grafo_errors"},{"location":"modules/bibgrafo/grafo_errors/#_1","text":"","title":""},{"location":"modules/bibgrafo/grafo_errors/#verticeinvalidoerror","text":"source VerticeInvalidoError() Esta classe deve ser usada quando o v\u00e9rtice n\u00e3o existe no grafo ou quando o formato do v\u00e9rtice for inv\u00e1lido.","title":"VerticeInvalidoError"},{"location":"modules/bibgrafo/grafo_errors/#arestainvalidaerror","text":"source ArestaInvalidaError() Esta classe deve ser usada quando a aresta n\u00e3o existe no grafo ou quando o formato da aresta for inv\u00e1lida.","title":"ArestaInvalidaError"},{"location":"modules/bibgrafo/grafo_errors/#matrizinvalidaerror","text":"source MatrizInvalidaError() Esta classe deve ser usada quando a matriz de adjac\u00eancia n\u00e3o estiver no formato correto. Pode ser usada nas classes GrafoMatrizAdjacenciaDirecionado e GrafoMatrizAdjacenciaNaoDirecionado.","title":"MatrizInvalidaError"},{"location":"modules/bibgrafo/grafo_lista_adjacencia/","text":"GrafoListaAdjacencia source GrafoListaAdjacencia( vertices = None, arestas = None ) Esta classe representa um grafo com implementa\u00e7\u00e3o interna em lista de adjac\u00eancia Attributes _vertices (list) : Uma lista dos v\u00e9rtices (ou nodos) do grafo. _arestas : Uma dicion\u00e1rio que guarda as arestas do grafo. A chave representa o nome da aresta e o valor \u00e9 um objeto do tipo Aresta que deve conter refer\u00eancias para os v\u00e9rtices Methods: .vertices source .vertices() list: Uma lista de v\u00e9rtices. .arestas source .arestas() dict: Um dicion\u00e1rio de arestas. .vertice_valido source .vertice_valido( cls, vertice: Vertice ) Verifica se um v\u00e9rtice passado como par\u00e2metro est\u00e1 dentro do padr\u00e3o estabelecido. O r\u00f3tulo do v\u00e9rtice n\u00e3o pode ser vazio. Args vertice : Um objeto do tipo Vertice que representa o v\u00e9rtice a ser analisado. Returns Um valor booleano que indica se o v\u00e9rtice est\u00e1 no formato correto. .existe_vertice source .existe_vertice( vertice: Vertice ) Verifica se um v\u00e9rtice passado como par\u00e2metro pertence ao grafo. Args vertice : O v\u00e9rtice que deve ser verificado. Return: Um valor booleano que indica se o v\u00e9rtice existe no grafo. .existe_rotulo_vertice source .existe_rotulo_vertice( rotulo: str ) Verifica se h\u00e1 algum v\u00e9rtice no grafo com o r\u00f3tulo que \u00e9 passado como par\u00e2metro. Args rotulo : O v\u00e9rtice que deve ser verificado. Returns Um valor booleano que indica se o v\u00e9rtice existe no grafo. .get_vertice source .get_vertice( rotulo: str ) Retorna o objeto do tipo v\u00e9rtice que tem como r\u00f3tulo o par\u00e2metro passado. Args rotulo : O r\u00f3tulo do v\u00e9rtice a ser retornado Returns Um objeto do tipo v\u00e9rtice que tem como r\u00f3tulo o par\u00e2metro passado Raises VerticeInvalidoError se o v\u00e9rtice n\u00e3o for encontrado. .remove_vertice source .remove_vertice( v: str ) Remove um v\u00e9rtice que tenha o r\u00f3tulo passado como par\u00e2metro e remove em cascata as arestas que est\u00e3o conectadas a esse v\u00e9rtice. Args v : O r\u00f3tulo do v\u00e9rtice a ser removido. Raises VerticeInvalidoError se o v\u00e9rtice passado como par\u00e2metro n\u00e3o existir no grafo. .existe_rotulo_aresta source .existe_rotulo_aresta( r = '' ) Verifica se um r\u00f3tulo de aresta passada como par\u00e2metro pertence ao grafo. Args r : O r\u00f3tulo da aresta a ser verificada Returns Um valor booleano que indica se o r\u00f3tulo da aresta existe no grafo. .get_aresta source .get_aresta( r ) Retorna uma refer\u00eancia para a aresta que tem o r\u00f3tulo passado como par\u00e2metro Args r : O r\u00f3tulo da aresta solicitada Returns Um objeto do tipo Aresta que \u00e9 uma refer\u00eancia para a aresta requisitada ou False se a aresta n\u00e3o existe .aresta_valida source .aresta_valida( aresta: Aresta ) Verifica se uma aresta passada como par\u00e2metro est\u00e1 dentro do padr\u00e3o estabelecido. Uma aresta s\u00f3 \u00e9 v\u00e1lida se conectar dois v\u00e9rtices existentes no grafo e for uma inst\u00e2ncia da classe Aresta. Args aresta : A aresta que se quer verificar se est\u00e1 no formato correto. Returns Um valor booleano que indica se a aresta est\u00e1 no formato correto. .remove_aresta source .remove_aresta( r: str ) Remove uma aresta a partir de seu r\u00f3tulo. Args r : O r\u00f3tulo da aresta a ser removida. Raises ArestaInvalidaError se a aresta passada como par\u00e2metro n\u00e3o puder ser removida.","title":"grafo_lista_adjacencia"},{"location":"modules/bibgrafo/grafo_lista_adjacencia/#_1","text":"","title":""},{"location":"modules/bibgrafo/grafo_lista_adjacencia/#grafolistaadjacencia","text":"source GrafoListaAdjacencia( vertices = None, arestas = None ) Esta classe representa um grafo com implementa\u00e7\u00e3o interna em lista de adjac\u00eancia Attributes _vertices (list) : Uma lista dos v\u00e9rtices (ou nodos) do grafo. _arestas : Uma dicion\u00e1rio que guarda as arestas do grafo. A chave representa o nome da aresta e o valor \u00e9 um objeto do tipo Aresta que deve conter refer\u00eancias para os v\u00e9rtices Methods:","title":"GrafoListaAdjacencia"},{"location":"modules/bibgrafo/grafo_lista_adjacencia/#vertices","text":"source .vertices() list: Uma lista de v\u00e9rtices.","title":".vertices"},{"location":"modules/bibgrafo/grafo_lista_adjacencia/#arestas","text":"source .arestas() dict: Um dicion\u00e1rio de arestas.","title":".arestas"},{"location":"modules/bibgrafo/grafo_lista_adjacencia/#vertice_valido","text":"source .vertice_valido( cls, vertice: Vertice ) Verifica se um v\u00e9rtice passado como par\u00e2metro est\u00e1 dentro do padr\u00e3o estabelecido. O r\u00f3tulo do v\u00e9rtice n\u00e3o pode ser vazio. Args vertice : Um objeto do tipo Vertice que representa o v\u00e9rtice a ser analisado. Returns Um valor booleano que indica se o v\u00e9rtice est\u00e1 no formato correto.","title":".vertice_valido"},{"location":"modules/bibgrafo/grafo_lista_adjacencia/#existe_vertice","text":"source .existe_vertice( vertice: Vertice ) Verifica se um v\u00e9rtice passado como par\u00e2metro pertence ao grafo. Args vertice : O v\u00e9rtice que deve ser verificado. Return: Um valor booleano que indica se o v\u00e9rtice existe no grafo.","title":".existe_vertice"},{"location":"modules/bibgrafo/grafo_lista_adjacencia/#existe_rotulo_vertice","text":"source .existe_rotulo_vertice( rotulo: str ) Verifica se h\u00e1 algum v\u00e9rtice no grafo com o r\u00f3tulo que \u00e9 passado como par\u00e2metro. Args rotulo : O v\u00e9rtice que deve ser verificado. Returns Um valor booleano que indica se o v\u00e9rtice existe no grafo.","title":".existe_rotulo_vertice"},{"location":"modules/bibgrafo/grafo_lista_adjacencia/#get_vertice","text":"source .get_vertice( rotulo: str ) Retorna o objeto do tipo v\u00e9rtice que tem como r\u00f3tulo o par\u00e2metro passado. Args rotulo : O r\u00f3tulo do v\u00e9rtice a ser retornado Returns Um objeto do tipo v\u00e9rtice que tem como r\u00f3tulo o par\u00e2metro passado Raises VerticeInvalidoError se o v\u00e9rtice n\u00e3o for encontrado.","title":".get_vertice"},{"location":"modules/bibgrafo/grafo_lista_adjacencia/#remove_vertice","text":"source .remove_vertice( v: str ) Remove um v\u00e9rtice que tenha o r\u00f3tulo passado como par\u00e2metro e remove em cascata as arestas que est\u00e3o conectadas a esse v\u00e9rtice. Args v : O r\u00f3tulo do v\u00e9rtice a ser removido. Raises VerticeInvalidoError se o v\u00e9rtice passado como par\u00e2metro n\u00e3o existir no grafo.","title":".remove_vertice"},{"location":"modules/bibgrafo/grafo_lista_adjacencia/#existe_rotulo_aresta","text":"source .existe_rotulo_aresta( r = '' ) Verifica se um r\u00f3tulo de aresta passada como par\u00e2metro pertence ao grafo. Args r : O r\u00f3tulo da aresta a ser verificada Returns Um valor booleano que indica se o r\u00f3tulo da aresta existe no grafo.","title":".existe_rotulo_aresta"},{"location":"modules/bibgrafo/grafo_lista_adjacencia/#get_aresta","text":"source .get_aresta( r ) Retorna uma refer\u00eancia para a aresta que tem o r\u00f3tulo passado como par\u00e2metro Args r : O r\u00f3tulo da aresta solicitada Returns Um objeto do tipo Aresta que \u00e9 uma refer\u00eancia para a aresta requisitada ou False se a aresta n\u00e3o existe","title":".get_aresta"},{"location":"modules/bibgrafo/grafo_lista_adjacencia/#aresta_valida","text":"source .aresta_valida( aresta: Aresta ) Verifica se uma aresta passada como par\u00e2metro est\u00e1 dentro do padr\u00e3o estabelecido. Uma aresta s\u00f3 \u00e9 v\u00e1lida se conectar dois v\u00e9rtices existentes no grafo e for uma inst\u00e2ncia da classe Aresta. Args aresta : A aresta que se quer verificar se est\u00e1 no formato correto. Returns Um valor booleano que indica se a aresta est\u00e1 no formato correto.","title":".aresta_valida"},{"location":"modules/bibgrafo/grafo_lista_adjacencia/#remove_aresta","text":"source .remove_aresta( r: str ) Remove uma aresta a partir de seu r\u00f3tulo. Args r : O r\u00f3tulo da aresta a ser removida. Raises ArestaInvalidaError se a aresta passada como par\u00e2metro n\u00e3o puder ser removida.","title":".remove_aresta"},{"location":"modules/bibgrafo/grafo_matriz_adj_dir/","text":"GrafoMatrizAdjacenciaDirecionado source GrafoMatrizAdjacenciaDirecionado( vertices: list = None, matriz: list = None ) Esta classe representa um grafo direcionado com implementa\u00e7\u00e3o interna em matriz de adjac\u00eancia Attributes _vertices (list) : Uma lista dos v\u00e9rtices (ou nodos) do grafo. _matriz : Uma matriz de adjac\u00eancia que guarda as arestas do grafo. Cada entrada da matriz tem um dicion\u00e1rio de arestas (objetos do tipo Aresta) para que seja poss\u00edvel representar arestas paralelas e que cada aresta tenha seus pr\u00f3prios atributos distintos. Methods: .vertices source .vertices() list: Uma lista de v\u00e9rtices. .matriz source .matriz() list: Uma matriz de arestas. .vertice_valido source .vertice_valido( cls, vertice: Vertice ) Verifica se um v\u00e9rtice passado como par\u00e2metro est\u00e1 dentro do padr\u00e3o estabelecido. Um v\u00e9rtice n\u00e3o pode ter um r\u00f3tulo vazio. Args vertice : Um objeto do tipo Vertice que representa o v\u00e9rtice a ser analisado. Returns Um valor booleano que indica se o v\u00e9rtice est\u00e1 no formato correto. .existe_vertice source .existe_vertice( vertice: Vertice ) Verifica se um v\u00e9rtice passado como par\u00e2metro pertence ao grafo. Args vertice : O v\u00e9rtice que deve ser verificado. Returns Um valor booleano que indica se o v\u00e9rtice existe no grafo. .get_vertice source .get_vertice( rotulo: str ) Retorna o objeto do tipo v\u00e9rtice que tem como r\u00f3tulo o par\u00e2metro passado. Args rotulo : O r\u00f3tulo do v\u00e9rtice a ser retornado Returns Um objeto do tipo v\u00e9rtice que tem como r\u00f3tulo o par\u00e2metro passado ou False se o v\u00e9rtice n\u00e3o for encontrado. .existe_rotulo_vertice source .existe_rotulo_vertice( rotulo: str ) Verifica se h\u00e1 algum v\u00e9rtice no grafo com o r\u00f3tulo que \u00e9 passado como par\u00e2metro. Args rotulo : O v\u00e9rtice que deve ser verificado. Returns Um valor booleano que indica se o v\u00e9rtice existe no grafo. .indice_do_vertice source .indice_do_vertice( v: Vertice ) Dado um v\u00e9rtice retorna o \u00edndice do v\u00e9rtice na lista de v\u00e9rtices. Pode ser usado para indexar a matriz. Args v : O v\u00e9rtice a ser analisado Returns O \u00edndice do primeiro v\u00e9rtice da aresta na lista de v\u00e9rtices .remove_vertice source .remove_vertice( rotulo: str ) Remove um v\u00e9rtice do grafo a partir do r\u00f3tulo do v\u00e9rtice. Args rotulo : O r\u00f3tulo do v\u00e9rtice a ser removido do grafo. Returns True se o v\u00e9rtice foi removido com sucesso. Raises VerticeInvalidoException : se o v\u00e9rtice n\u00e3o for encontrado no grafo .aresta_valida source .aresta_valida( aresta: ArestaDirecionada ) Verifica se uma aresta passada como par\u00e2metro est\u00e1 dentro do padr\u00e3o estabelecido. Uma aresta s\u00f3 \u00e9 v\u00e1lida se conectar dois v\u00e9rtices existentes no grafo. Args aresta : A aresta que se quer verificar se est\u00e1 no formato correto. Returns Um valor booleano que indica se a aresta est\u00e1 no formato correto. .existe_aresta source .existe_aresta( aresta: ArestaDirecionada ) Verifica se uma aresta passada como par\u00e2metro pertence ao grafo. Args aresta : A aresta a ser verificada. Returns Um valor booleano que indica se a aresta existe no grafo. .remove_aresta source .remove_aresta( r: str, v1: str = None, v2: str = None ) Remove uma aresta do grafo. Os par\u00e2metros v1 e v2 s\u00e3o opcionais e servem para acelerar a busca pela aresta de interesse. Se for passado apenas o par\u00e2metro r, dever\u00e1 ocorrer uma busca por toda a matriz. Args r : O r\u00f3tulo da aresta a ser removida. v1 : O r\u00f3tulo do v\u00e9rtice 1 da aresta a ser removida. v2 : O r\u00f3tulo do v\u00e9rtice 2 da aresta a ser removida. Raises VerticeInvalidoError : caso a aresta n\u00e3o exista no grafo ou caso algum dos v\u00e9rtices passados n\u00e3o existam. Returns Retorna True se a aresta foi removida com sucesso.","title":"grafo_matriz_adj_dir"},{"location":"modules/bibgrafo/grafo_matriz_adj_dir/#_1","text":"","title":""},{"location":"modules/bibgrafo/grafo_matriz_adj_dir/#grafomatrizadjacenciadirecionado","text":"source GrafoMatrizAdjacenciaDirecionado( vertices: list = None, matriz: list = None ) Esta classe representa um grafo direcionado com implementa\u00e7\u00e3o interna em matriz de adjac\u00eancia Attributes _vertices (list) : Uma lista dos v\u00e9rtices (ou nodos) do grafo. _matriz : Uma matriz de adjac\u00eancia que guarda as arestas do grafo. Cada entrada da matriz tem um dicion\u00e1rio de arestas (objetos do tipo Aresta) para que seja poss\u00edvel representar arestas paralelas e que cada aresta tenha seus pr\u00f3prios atributos distintos. Methods:","title":"GrafoMatrizAdjacenciaDirecionado"},{"location":"modules/bibgrafo/grafo_matriz_adj_dir/#vertices","text":"source .vertices() list: Uma lista de v\u00e9rtices.","title":".vertices"},{"location":"modules/bibgrafo/grafo_matriz_adj_dir/#matriz","text":"source .matriz() list: Uma matriz de arestas.","title":".matriz"},{"location":"modules/bibgrafo/grafo_matriz_adj_dir/#vertice_valido","text":"source .vertice_valido( cls, vertice: Vertice ) Verifica se um v\u00e9rtice passado como par\u00e2metro est\u00e1 dentro do padr\u00e3o estabelecido. Um v\u00e9rtice n\u00e3o pode ter um r\u00f3tulo vazio. Args vertice : Um objeto do tipo Vertice que representa o v\u00e9rtice a ser analisado. Returns Um valor booleano que indica se o v\u00e9rtice est\u00e1 no formato correto.","title":".vertice_valido"},{"location":"modules/bibgrafo/grafo_matriz_adj_dir/#existe_vertice","text":"source .existe_vertice( vertice: Vertice ) Verifica se um v\u00e9rtice passado como par\u00e2metro pertence ao grafo. Args vertice : O v\u00e9rtice que deve ser verificado. Returns Um valor booleano que indica se o v\u00e9rtice existe no grafo.","title":".existe_vertice"},{"location":"modules/bibgrafo/grafo_matriz_adj_dir/#get_vertice","text":"source .get_vertice( rotulo: str ) Retorna o objeto do tipo v\u00e9rtice que tem como r\u00f3tulo o par\u00e2metro passado. Args rotulo : O r\u00f3tulo do v\u00e9rtice a ser retornado Returns Um objeto do tipo v\u00e9rtice que tem como r\u00f3tulo o par\u00e2metro passado ou False se o v\u00e9rtice n\u00e3o for encontrado.","title":".get_vertice"},{"location":"modules/bibgrafo/grafo_matriz_adj_dir/#existe_rotulo_vertice","text":"source .existe_rotulo_vertice( rotulo: str ) Verifica se h\u00e1 algum v\u00e9rtice no grafo com o r\u00f3tulo que \u00e9 passado como par\u00e2metro. Args rotulo : O v\u00e9rtice que deve ser verificado. Returns Um valor booleano que indica se o v\u00e9rtice existe no grafo.","title":".existe_rotulo_vertice"},{"location":"modules/bibgrafo/grafo_matriz_adj_dir/#indice_do_vertice","text":"source .indice_do_vertice( v: Vertice ) Dado um v\u00e9rtice retorna o \u00edndice do v\u00e9rtice na lista de v\u00e9rtices. Pode ser usado para indexar a matriz. Args v : O v\u00e9rtice a ser analisado Returns O \u00edndice do primeiro v\u00e9rtice da aresta na lista de v\u00e9rtices","title":".indice_do_vertice"},{"location":"modules/bibgrafo/grafo_matriz_adj_dir/#remove_vertice","text":"source .remove_vertice( rotulo: str ) Remove um v\u00e9rtice do grafo a partir do r\u00f3tulo do v\u00e9rtice. Args rotulo : O r\u00f3tulo do v\u00e9rtice a ser removido do grafo. Returns True se o v\u00e9rtice foi removido com sucesso. Raises VerticeInvalidoException : se o v\u00e9rtice n\u00e3o for encontrado no grafo","title":".remove_vertice"},{"location":"modules/bibgrafo/grafo_matriz_adj_dir/#aresta_valida","text":"source .aresta_valida( aresta: ArestaDirecionada ) Verifica se uma aresta passada como par\u00e2metro est\u00e1 dentro do padr\u00e3o estabelecido. Uma aresta s\u00f3 \u00e9 v\u00e1lida se conectar dois v\u00e9rtices existentes no grafo. Args aresta : A aresta que se quer verificar se est\u00e1 no formato correto. Returns Um valor booleano que indica se a aresta est\u00e1 no formato correto.","title":".aresta_valida"},{"location":"modules/bibgrafo/grafo_matriz_adj_dir/#existe_aresta","text":"source .existe_aresta( aresta: ArestaDirecionada ) Verifica se uma aresta passada como par\u00e2metro pertence ao grafo. Args aresta : A aresta a ser verificada. Returns Um valor booleano que indica se a aresta existe no grafo.","title":".existe_aresta"},{"location":"modules/bibgrafo/grafo_matriz_adj_dir/#remove_aresta","text":"source .remove_aresta( r: str, v1: str = None, v2: str = None ) Remove uma aresta do grafo. Os par\u00e2metros v1 e v2 s\u00e3o opcionais e servem para acelerar a busca pela aresta de interesse. Se for passado apenas o par\u00e2metro r, dever\u00e1 ocorrer uma busca por toda a matriz. Args r : O r\u00f3tulo da aresta a ser removida. v1 : O r\u00f3tulo do v\u00e9rtice 1 da aresta a ser removida. v2 : O r\u00f3tulo do v\u00e9rtice 2 da aresta a ser removida. Raises VerticeInvalidoError : caso a aresta n\u00e3o exista no grafo ou caso algum dos v\u00e9rtices passados n\u00e3o existam. Returns Retorna True se a aresta foi removida com sucesso.","title":".remove_aresta"},{"location":"modules/bibgrafo/grafo_matriz_adj_nao_dir/","text":"GrafoMatrizAdjacenciaNaoDirecionado source GrafoMatrizAdjacenciaNaoDirecionado( vertices = None, matriz = None ) Esta classe representa um grafo com implementa\u00e7\u00e3o interna em lista de adjac\u00eancia Attributes _vertices (list) : Uma lista dos v\u00e9rtices (ou nodos) do grafo. _arestas : Uma dicion\u00e1rio que guarda as arestas do grafo. A chave representa o nome da aresta e o valor \u00e9 um objeto do tipo Aresta que deve conter refer\u00eancias para os v\u00e9rtices Methods: .vertices source .vertices() list: Uma lista de v\u00e9rtices. .matriz source .matriz() list: Uma matriz de arestas. .existe_aresta source .existe_aresta( aresta: Aresta ) Verifica se uma aresta passada como par\u00e2metro pertence ao grafo. Args aresta : A aresta a ser verificada Returns Um valor booleano que indica se a aresta existe no grafo. .existe_rotulo_aresta source .existe_rotulo_aresta( aresta: str ) Verifica se uma aresta passada como par\u00e2metro pertence ao grafo. Args aresta : A aresta a ser verificada Returns Um valor booleano que indica se a aresta existe no grafo. .aresta_valida source .aresta_valida( aresta: Aresta ) Verifica se uma aresta passada como par\u00e2metro est\u00e1 dentro do padr\u00e3o estabelecido. Uma aresta s\u00f3 \u00e9 v\u00e1lida se conectar dois v\u00e9rtices existentes no grafo. Args aresta : A aresta que se quer verificar se est\u00e1 no formato correto. Returns Um valor booleano que indica se a aresta est\u00e1 no formato correto. .remove_aresta source .remove_aresta( r: str, v1 = None, v2 = None ) Remove uma aresta do grafo. Os par\u00e2metros v1 e v2 s\u00e3o opcionais e servem para acelerar a busca pela aresta de interesse. Se for passado apenas o par\u00e2metro r, dever\u00e1 ocorrer uma busca por toda a matriz. Args r : O r\u00f3tulo da aresta a ser removida v1 : O v\u00e9rtice 1 da aresta a ser removida v2 : O v\u00e9rtice 2 da aresta a ser removida Raises ArestaInvalidaError : caso a aresta n\u00e3o exista no grafo VerticeInvalidoError : caso algum dos v\u00e9rtices passados n\u00e3o existam Returns Retorna True se a aresta foi removida com sucesso.","title":"grafo_matriz_adj_nao_dir"},{"location":"modules/bibgrafo/grafo_matriz_adj_nao_dir/#_1","text":"","title":""},{"location":"modules/bibgrafo/grafo_matriz_adj_nao_dir/#grafomatrizadjacencianaodirecionado","text":"source GrafoMatrizAdjacenciaNaoDirecionado( vertices = None, matriz = None ) Esta classe representa um grafo com implementa\u00e7\u00e3o interna em lista de adjac\u00eancia Attributes _vertices (list) : Uma lista dos v\u00e9rtices (ou nodos) do grafo. _arestas : Uma dicion\u00e1rio que guarda as arestas do grafo. A chave representa o nome da aresta e o valor \u00e9 um objeto do tipo Aresta que deve conter refer\u00eancias para os v\u00e9rtices Methods:","title":"GrafoMatrizAdjacenciaNaoDirecionado"},{"location":"modules/bibgrafo/grafo_matriz_adj_nao_dir/#vertices","text":"source .vertices() list: Uma lista de v\u00e9rtices.","title":".vertices"},{"location":"modules/bibgrafo/grafo_matriz_adj_nao_dir/#matriz","text":"source .matriz() list: Uma matriz de arestas.","title":".matriz"},{"location":"modules/bibgrafo/grafo_matriz_adj_nao_dir/#existe_aresta","text":"source .existe_aresta( aresta: Aresta ) Verifica se uma aresta passada como par\u00e2metro pertence ao grafo. Args aresta : A aresta a ser verificada Returns Um valor booleano que indica se a aresta existe no grafo.","title":".existe_aresta"},{"location":"modules/bibgrafo/grafo_matriz_adj_nao_dir/#existe_rotulo_aresta","text":"source .existe_rotulo_aresta( aresta: str ) Verifica se uma aresta passada como par\u00e2metro pertence ao grafo. Args aresta : A aresta a ser verificada Returns Um valor booleano que indica se a aresta existe no grafo.","title":".existe_rotulo_aresta"},{"location":"modules/bibgrafo/grafo_matriz_adj_nao_dir/#aresta_valida","text":"source .aresta_valida( aresta: Aresta ) Verifica se uma aresta passada como par\u00e2metro est\u00e1 dentro do padr\u00e3o estabelecido. Uma aresta s\u00f3 \u00e9 v\u00e1lida se conectar dois v\u00e9rtices existentes no grafo. Args aresta : A aresta que se quer verificar se est\u00e1 no formato correto. Returns Um valor booleano que indica se a aresta est\u00e1 no formato correto.","title":".aresta_valida"},{"location":"modules/bibgrafo/grafo_matriz_adj_nao_dir/#remove_aresta","text":"source .remove_aresta( r: str, v1 = None, v2 = None ) Remove uma aresta do grafo. Os par\u00e2metros v1 e v2 s\u00e3o opcionais e servem para acelerar a busca pela aresta de interesse. Se for passado apenas o par\u00e2metro r, dever\u00e1 ocorrer uma busca por toda a matriz. Args r : O r\u00f3tulo da aresta a ser removida v1 : O v\u00e9rtice 1 da aresta a ser removida v2 : O v\u00e9rtice 2 da aresta a ser removida Raises ArestaInvalidaError : caso a aresta n\u00e3o exista no grafo VerticeInvalidoError : caso algum dos v\u00e9rtices passados n\u00e3o existam Returns Retorna True se a aresta foi removida com sucesso.","title":".remove_aresta"},{"location":"modules/bibgrafo/vertice/","text":"Vertice source Vertice( rotulo: str, attr = None ) Esta classe representa um v\u00e9rtice de um grafo. Attributes _rotulo (str) : O r\u00f3tulo (ou nome) do v\u00e9rtice Methods: .rotulo source .rotulo() str: O r\u00f3tulo (ou nome) do v\u00e9rtice. .attr source .attr() dict: Um dicion\u00e1rio de atributos do v\u00e9rtice. De acordo com a modelagem ques e deseja fazer, v\u00e9rtices podem ter atributos n\u00e3o previstos nessa implementa\u00e7\u00e3o. Dessa forma, foi inclu\u00eddo um dicion\u00e1rio de atributos para que o usu\u00e1rio possa incluir outros atributos que desejar. .adiciona_attr source .adiciona_attr( chave, valor ) Adiciona um novo atributo para o v\u00e9rtice. Args chave : A chave para armazenamento do atributo no dicion\u00e1rio. valor : O valor associado \u00e0 chave. .remove_attr source .remove_attr( chave ) Adiciona um novo atributo para o v\u00e9rtice. Args chave : A chave do atributo que deve ser removido. .get_um_attr source .get_um_attr( chave ) Retorna o valor de um atributo definido pelo usu\u00e1rio da classe Args chave : A chave do atributo para o qual deve ser retornado o valor","title":"vertice"},{"location":"modules/bibgrafo/vertice/#_1","text":"","title":""},{"location":"modules/bibgrafo/vertice/#vertice","text":"source Vertice( rotulo: str, attr = None ) Esta classe representa um v\u00e9rtice de um grafo. Attributes _rotulo (str) : O r\u00f3tulo (ou nome) do v\u00e9rtice Methods:","title":"Vertice"},{"location":"modules/bibgrafo/vertice/#rotulo","text":"source .rotulo() str: O r\u00f3tulo (ou nome) do v\u00e9rtice.","title":".rotulo"},{"location":"modules/bibgrafo/vertice/#attr","text":"source .attr() dict: Um dicion\u00e1rio de atributos do v\u00e9rtice. De acordo com a modelagem ques e deseja fazer, v\u00e9rtices podem ter atributos n\u00e3o previstos nessa implementa\u00e7\u00e3o. Dessa forma, foi inclu\u00eddo um dicion\u00e1rio de atributos para que o usu\u00e1rio possa incluir outros atributos que desejar.","title":".attr"},{"location":"modules/bibgrafo/vertice/#adiciona_attr","text":"source .adiciona_attr( chave, valor ) Adiciona um novo atributo para o v\u00e9rtice. Args chave : A chave para armazenamento do atributo no dicion\u00e1rio. valor : O valor associado \u00e0 chave.","title":".adiciona_attr"},{"location":"modules/bibgrafo/vertice/#remove_attr","text":"source .remove_attr( chave ) Adiciona um novo atributo para o v\u00e9rtice. Args chave : A chave do atributo que deve ser removido.","title":".remove_attr"},{"location":"modules/bibgrafo/vertice/#get_um_attr","text":"source .get_um_attr( chave ) Retorna o valor de um atributo definido pelo usu\u00e1rio da classe Args chave : A chave do atributo para o qual deve ser retornado o valor","title":".get_um_attr"}]}